import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AOSProvider } from "@/components/AOSProvider";
import { LanguageProvider } from "@/context/LanguageContext";
import { LoadingProvider } from "@/context/LoadingContext";
import LoaderOverlay from "@/components/LoaderOverlay";
import { RouteChangeListener } from "@/components/RouteChangeListener";
import { Suspense } from 'react'; // Import Suspense

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <LoadingProvider>
          <LoaderOverlay />
          <Suspense fallback={null}> {/* Wrap RouteChangeListener with Suspense */}
            <RouteChangeListener />
          </Suspense>
          <AOSProvider>
            <LanguageProvider>{children}</LanguageProvider>
          </AOSProvider>
        </LoadingProvider>
      </body>
    </html>
  );
}